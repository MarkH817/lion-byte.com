@grid-gap-size: 10px;
@gap-horizontal: @grid-gap-size;
@gap-vertical: @grid-gap-size;

@grid-columns: 12;

.grid {
  &::before,
  &::after {
    content: '';
    display: table;
  }

  &::after {
    clear: both;
  }

  & > * {
    float: left;
    margin-right: @gap-horizontal;
    margin-bottom: @gap-vertical;
  }

  @supports (grid-area: auto) {
    display: grid;
    grid-column-gap: @gap-horizontal;
    grid-row-gap: @gap-vertical;

    &::after,
    &::before {
      content: none;
    }

    & > * {
      margin-right: 0;
      margin-bottom: 0;
    }
  }
}

.grid-auto(@min-width: 0) {
  & > * {
    float: left;
    width: ((100% / 3) - @gap-horizontal);

    &:nth-child(3n + 1) {
      clear: both;
    }
  }

  @supports (grid-area: auto) {
    grid-template-columns: repeat(auto-fit, minmax(@min-width, 1fr));

    & > * {
      width: auto;
      margin: 0;
    }
  }
}

.grid-flex {
  display: flex;
  flex-wrap: wrap;
  margin: (@grid-gap-size * -1) 0 0 (@grid-gap-size * -1);
}

.generate-sm-columns(@n, @i: 1) when (@i <= @n) {
  &.col-sm-@{i} {
    flex-basis: round(@i * 100% / @n, 2);
    max-width: round(@i * 100% / @n, 2);
  }

  .generate-sm-columns(@n, (@i + 1));
}

.generate-md-columns(@n, @i: 1) when (@i <= @n) {
  &.col-md-@{i} {
    flex-basis: round(@i * 100% / @n, 2);
    max-width: round(@i * 100% / @n, 2);
  }

  .generate-md-columns(@n, (@i + 1));
}

.generate-lg-columns(@n, @i: 1) when (@i <= @n) {
  &.col-lg-@{i} {
    flex-basis: round(@i * 100% / @n, 2);
    max-width: round(@i * 100% / @n, 2);
  }

  .generate-lg-columns(@n, (@i + 1));
}

.generate-xl-columns(@n, @i: 1) when (@i <= @n) {
  &.col-xl-@{i} {
    flex-basis: round(@i * 100% / @n, 2);
    max-width: round(@i * 100% / @n, 2);
  }

  .generate-xl-columns(@n, (@i + 1));
}

.generate-columns(@n) {
  @media only screen and (max-width: 599px) {
    .generate-sm-columns(@n);
  }

  @media only screen and (min-width: 600px) and (max-width: 1199px) {
    .generate-md-columns(@n);
  }

  @media only screen and (min-width: 1200px) and (max-width: 1599px) {
    .generate-lg-columns(@n);
  }

  @media only screen and (min-width: 1600px) {
    .generate-xl-columns(@n);
  }
}

.col {
  padding: @grid-gap-size 0 0 @grid-gap-size;
  background-clip: content-box;
  flex-basis: 100%;

  .generate-columns(@grid-columns);
}
